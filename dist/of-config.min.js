var AppState=function(){function t(){}return t}(),LanguageSettings=function(){function t(){this.localizationPrefix="localization/",this.localizationSuffix=".json",this.storageKey="language",this.lang=void 0}return t}(),StateSettings=function(){function t(){}return t}(),UiGroup=function(){function t(){}return t}(),__extends=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),UiOption=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e}(AppState),MenuOptionType;!function(t){t[t.Action=1]="Action",t[t.Url=2]="Url",t[t.State=3]="State"}(MenuOptionType||(MenuOptionType={}));var OfConfigService=function(){function t(t,e,n,o,i,a){var r=this;this.$http=t,this.$log=e,this.$translate=n,this.settingsEndpoint=o,this.stateSettings=i,this.languageSettings=a,this.settings={},this.states=[],console.debug("logger",e),this.loadSettings().then(function(t){return r.loadStates()}).then(function(t){return r.loadLanguage()}).catch(function(t){e.error(t)})}return t.prototype.loadSettings=function(){var t=this;if(this.$log.debug("of.config - cargando configuración"),!this.settingsEndpoint)return this.$log.info("of.config - no se especifica endpoint para configuración"),null;var e=this.$http.get(this.settingsEndpoint);return e.then(function(e){return t.$log.debug("of.config - configuración cargada",e.data),t.settings=angular.extend(t.settings,e.data),e.data}),e},t.prototype.loadLanguage=function(){this.$log.debug("of.config - cargando lenguage"),this.languageSettings?(this.setLanguage(this.getLanguage()),this.$log.debug("of.config - lenguaje cargado",this.languageSettings)):this.$log.info("of.config - no se especifica configuración para lenguaje")},t.prototype.loadStates=function(){var t=this;if(console.debug("logger",this.$log),this.$log.debug("of.config - cargando estados"),!this.stateSettings)return this.$log.info("of.config - no se especifica endpoint para estados"),null;var e=this.$http.get(this.stateSettings.statesEndpoint);return e.then(function(e){return t.$log.debug("of.config - estados cargados",e.data),t.states=angular.extend(t.states,e.data),t.stateSettings.callback&&t.stateSettings.callback(e.data),e.data}),e},t.prototype.getLanguage=function(){return this.languageSettings.storage.getItem(this.languageSettings.storageKey)||this.languageSettings.lang},t.prototype.setLanguage=function(t){this.languageSettings.lang=t,this.languageSettings.storage.setItem(this.languageSettings.storageKey,t),this.$translate.use(t)},t}(),OfConfigServiceProvider=function(){function t(t){var e=this;this.$translateProvider=t,this.$get=["$http","$log","$translate",function(t,n,o){return console.debug("logger",n),new OfConfigService(t,n,o,e.settingsEndpoint,e.stateSettings,e.languageSettings)}]}return t.prototype.configureSettings=function(t){console.debug("of.config - configurando settings",t),this.settingsEndpoint=t},t.prototype.configureLanguage=function(t){console.debug("of.config - configurando lenguaje",t),this.languageSettings=t,this.$translateProvider.useStaticFilesLoader({prefix:t.localizationPrefix,suffix:t.localizationSuffix}),this.$translateProvider.useSanitizeValueStrategy("escape"),t.lang||(t.lang=(navigator.language||navigator.userLanguage).split("-")[0]),this.$translateProvider.preferredLanguage(t.lang)},t.prototype.configureStates=function(t){console.debug("of.config - configurando estados",t),this.stateSettings=t},t}();OfConfigServiceProvider.$inject=["$translateProvider"];var OfHttpService=function(){function t(t,e,n){this.$http=t,this.$httpParamSerializer=e,this.$log=n}return t.prototype.findAll=function(){return this.$http.get(this.baseUri+this.resourcePath)},t.prototype.create=function(t){return this.$http.post(this.baseUri+this.resourcePath,t)},t.prototype.findOne=function(t){return this.$http.get(this.baseUri+this.resourcePath+t)},t.prototype.update=function(t,e){return this.$http.put(this.baseUri+this.resourcePath+t,e)},t.prototype.toObject=function(t){var e={};return t.forEach(function(t){e[t.id.toLowerCase()]=t.value}),e},t}();OfHttpService.$inject=["$http","$httpParamSerializer","$log","Settings"];var OfLocalStorageService=function(){function t(){}return t.prototype.setItem=function(t,e){null!=e?localStorage.setItem(t,JSON.stringify(e)):localStorage.removeItem(t)},t.prototype.getItem=function(t){var e=localStorage.getItem(t);return JSON.parse(e)},t.prototype.removeItem=function(t){localStorage.removeItem(t)},t}(),OfSessionStorageService=function(){function t(){}return t.prototype.setItem=function(t,e){null!=e?sessionStorage.setItem(t,JSON.stringify(e)):sessionStorage.removeItem(t)},t.prototype.getItem=function(t){var e=sessionStorage.getItem(t);return JSON.parse(e)},t.prototype.removeItem=function(t){sessionStorage.removeItem(t)},t}();!function(t){console.debug("of.config - inicializando módulo"),t.module("of.config",["pascalprecht.translate"]),t.module("of.config").service("OfHttpService",OfHttpService),t.module("of.config").service("OfStorageService",OfLocalStorageService),t.module("of.config").provider("OfConfigService",OfConfigServiceProvider)}(window.angular);